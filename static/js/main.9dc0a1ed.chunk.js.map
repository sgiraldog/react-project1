{"version":3,"sources":["images/gray-pokeball.png","config.js","redux/actions/pokemonActions.js","redux/reducers/pokemonReducer.js","redux/actions/navBarActions.js","redux/reducers/navBarReducer.js","redux/reducers/index.js","redux/store.js","components/StatsChart/statsChart.js","components/PokemonModal/pokemonModal.js","components/ComparisonModal/comparisonModal.js","components/NavigationBar/navigationBar.js","components/PokemonList/pokemonList.js","components/WelcomePage/welcomePage.js","components/PageNotFound/pageNotFound.js","App.js","index.js","images/pokedex.png","images/open-pokeball.png","images/pokeball.png","images/sad-pokemon.png"],"names":["module","exports","actionTypes","isComparing","type","getStringGender","index","initialState","count","next","config","previous","pokemons","isFetching","isFetchingPokemon","firstPokemon","secondPokemon","isModalActive","isComparisonModalActive","error","pokemonListReducer","state","action","payload","pokemon","dataLoaded","speciesLoaded","species","searchContent","isMobileItemsActive","navBarReducer","combineReducers","pokemonData","navBar","composeEnhancers","composeWithDevTools","name","realtime","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","thunk","connect","props","data","labels","stats","map","stat","datasets","label","base_stat","backgroundColor","borderWidth","hidden","options","responsive","legend","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","xAxes","gridLines","datasetKeyProvider","Math","random","dispatch","isPokemonModalActive","closeModal","className","onClick","event","stopPropagation","src","id","alt","toUpperCase","description","types","key","charAt","slice","height","weight","gender","pokeball","abilities","ability","pokemon2","updateSearch","text","changeMobileItemsStatus","to","icon","isSearchActive","placeholder","onChange","target","value","toLowerCase","didLoadPokemons","selectPokemon","getState","fetchPokemonList","url","fetch","then","res","json","results","catch","fetchPokemon","fetchPokemonSpecies","flavor_text_entries","flavor_text","gender_rate","dataLength","length","hasMore","filter","item","includes","indexOf","WelcomePage","PageNotFound","pokeballIcon","sadPokemon","App","basename","path","exact","component","PokemonList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dc0a1ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gray-pokeball.c4b0cee8.png\";","export default {\n  API_URL: 'https://pokeapi.co/api/v2',\n  SPRITES_URL: 'https://raw.githubusercontent.com/PokeAPI/sprites/146c91287ad01f6e15315bbd733fd7442c91fe6d/sprites/pokemon/'\n};","import config from '../../config';\nimport store from '../store';\n\nexport const actionTypes = {\n  FETCH_POKEMON_LIST_REQUEST: 'FETCH_POKEMON_LIST_REQUEST',\n  FETCH_POKEMON_LIST_SUCCESS: 'FETCH_POKEMON_LIST_SUCCESS',\n  FETCH_POKEMON_LIST_ERROR: 'FETCH_POKEMON_LIST_ERROR',\n\n  FETCH_POKEMON_REQUEST: 'FETCH_POKEMON_REQUEST',\n  FETCH_POKEMON_SUCCESS: 'FETCH_POKEMON_SUCCESS',\n  FETCH_POKEMON_ERROR: 'FETCH_POKEMON_ERROR',\n\n  FETCH_POKEMON_SPECIES_REQUEST: 'FETCH_POKEMON_SPECIES_REQUEST',\n  FETCH_POKEMON_SPECIES_SUCCESS: 'FETCH_POKEMON_SPECIES_SUCCESS',\n  FETCH_POKEMON_SPECIES_ERROR: 'FETCH_POKEMON_SPECIES_ERROR',\n\n  IS_MODAL_ACTIVE: 'IS_MODAL_ACTIVE',\n  SELECT_POKEMON: 'SELECT_POKEMON',\n  IS_COMPARING: 'IS_COMPARING',\n  IS_COMPARISON_MODAL_ACTIVE: 'IS_COMPARISON_MODAL_ACTIVE'\n}\n\n\nexport const fetchPokemonList = (url = config.API_URL + '/pokemon') => (dispatch) =>{\n  dispatch({\n    type: actionTypes.FETCH_POKEMON_LIST_REQUEST\n  })\n\n  fetch(url)\n  .then( res => res.json())\n  .then(data => {\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_LIST_SUCCESS,\n      payload: {\n        count: data.count,\n        next: data.next,\n        previous: data.previous,\n        pokemons: data.results\n      }\n    })\n  })\n  .catch(error =>{\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_LIST_ERROR,\n      payload:{\n        error: error\n      }\n    })\n  })\n}\n\n\nexport const fetchPokemon = (index) => (dispatch) =>{\n  const url = config.API_URL + '/pokemon/' + (index + 1);\n  const state = store.getState();\n  const pokemon = state.pokemonData.pokemons[index];\n\n  if(pokemon.dataLoaded && pokemon.speciesLoaded){\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_SUCCESS,\n      payload: {\n        index,\n        pokemon\n      }\n    })\n  }else{\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_REQUEST\n    })\n    \n    fetch(url)\n    .then( res => res.json())\n    .then(data => {\n      dispatch({\n        type: actionTypes.FETCH_POKEMON_SUCCESS,\n        payload: {\n          index,\n          pokemon:{\n            id: data.id,\n            name: data.name,\n            height: data.height,\n            weight: data.weight,\n            abilities: data.abilities,\n            stats: data.stats,\n            types: data.types,\n            url\n          }\n        }\n      })\n    })\n    .catch(error =>{\n      dispatch({\n        type: actionTypes.FETCH_POKEMON_ERROR,\n        payload:{\n          error: error\n        }\n      })\n    })\n  }\n  \n}\n\n\n\nexport const fetchPokemonSpecies = (index) => (dispatch) =>{\n  const url = config.API_URL + '/pokemon-species/' + (index + 1)\n  const state = store.getState();\n  const pokemon = state.pokemonData.pokemons[index];\n\n  if(pokemon.dataLoaded && pokemon.speciesLoaded){\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_SPECIES_SUCCESS,\n      payload: {\n        index,\n        species: {\n          description: pokemon.description,\n          gender: pokemon.gender\n        }\n      }\n    })\n  }else{\n    dispatch({\n      type: actionTypes.FETCH_POKEMON_SPECIES_REQUEST\n    })\n    fetch(url)\n    .then( res => res.json())\n    .then(data => {\n      dispatch({\n        type: actionTypes.FETCH_POKEMON_SPECIES_SUCCESS,\n        payload: {\n          index,\n          species:{\n            description: data.flavor_text_entries[0].flavor_text,\n            gender: getStringGender(data.gender_rate)\n          }\n        }\n      })\n    })\n    .catch(error =>{\n      dispatch({\n        type: actionTypes.FETCH_POKEMON_SPECIES_ERROR,\n        payload:{\n          error: error\n        }\n      })\n    })\n  }\n}\n\nexport const selectPokemon = (index) => {\n  const state = store.getState();\n  const key = !state.pokemonData.isComparing ? 'firstPokemon' : 'secondPokemon';\n\n  return({\n    type: actionTypes.SELECT_POKEMON,\n    payload: {\n      [key]: index\n    }\n  })\n}\n\nexport const isPokemonModalActive = () => \n  ({\n    type: actionTypes.IS_MODAL_ACTIVE\n  })\n\n\nexport const isComparing = () => \n  ({\n    type: actionTypes.IS_COMPARING\n  })\n\n\nexport const isComparisonModalActive = () =>\n  ({\n    type: actionTypes.IS_COMPARISON_MODAL_ACTIVE\n  })\n\nconst getStringGender = (index) => {\n  if ( index >= 0 && index <= 4 ){\n    return 'Male';\n  }else if (index >= 4 && index <= 8){\n    return \"Female\";\n  }else if (index === -1){\n    return 'Genderless';\n  }else {\n    return 'Unknown'\n  }\n}\n\n","import { actionTypes } from '../actions/pokemonActions';\nimport config from '../../config';\n\nconst initialState = {\n  count: 0,\n  next: config.API_URL + '/pokemon',\n  previous: '',\n  pokemons: [],\n  isFetching: false,\n  isFetchingPokemon: false,\n  firstPokemon: 0,\n  secondPokemon: 0,\n  isModalActive: false,\n  isComparing: false,\n  isComparisonModalActive: false,\n  error: null\n}\n\nconst pokemonListReducer = (state = initialState, action) => {\n  switch (action.type){\n    case actionTypes.FETCH_POKEMON_LIST_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case actionTypes.FETCH_POKEMON_LIST_SUCCESS:\n      return {\n        ...state,\n        count: action.payload.count,\n        next: action.payload.next,\n        previous: action.payload.previous,\n        pokemons: [...state.pokemons, ...action.payload.pokemons],\n        isFetching: false\n      }\n    case actionTypes.FETCH_POKEMON_LIST_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetching: false\n      }\n\n    case actionTypes.FETCH_POKEMON_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case actionTypes.FETCH_POKEMON_SUCCESS:\n      state.pokemons[action.payload.index] = {\n        ...action.payload.pokemon,\n         dataLoaded: true\n        }\n      return{\n        ...state,\n        isFetchingPokemon: false,\n        isModalActive:  !state.isComparing && state.pokemons[action.payload.index].dataLoaded && state.pokemons[action.payload.index].speciesLoaded,\n        isComparisonModalActive: state.isComparing && state.pokemons[action.payload.index].dataLoaded && state.pokemons[action.payload.index].speciesLoaded\n      }\n    \n    case actionTypes.FETCH_POKEMON_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetchingPokemon: false\n      }\n    \n    case actionTypes.FETCH_POKEMON_SPECIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case actionTypes.FETCH_POKEMON_SPECIES_SUCCESS:\n      state.pokemons[action.payload.index] = {\n        ...state.pokemons[action.payload.index],\n         ...action.payload.species, \n         speciesLoaded: true}\n       return{\n        ...state,\n        isFetchingPokemon: false,\n        isModalActive:  !state.isComparing && state.pokemons[action.payload.index].dataLoaded && state.pokemons[action.payload.index].speciesLoaded,\n        isComparisonModalActive: state.isComparing && state.pokemons[action.payload.index].dataLoaded && state.pokemons[action.payload.index].speciesLoaded\n      }\n    \n    case actionTypes.FETCH_POKEMON_SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetchingPokemon: false\n      }\n    case actionTypes.SELECT_POKEMON:\n      return {\n        ...state,\n        ...action.payload\n      }\n    case actionTypes.IS_MODAL_ACTIVE:\n      return {\n        ...state,\n        isModalActive: !state.isModalActive\n      }\n    case actionTypes.IS_COMPARING:\n      return {\n        ...state,\n        isComparing: !state.isComparing\n      }\n\n    case actionTypes.IS_COMPARISON_MODAL_ACTIVE:\n      return {\n        ...state,\n        isComparisonModalActive: !state.isComparisonModalActive\n      }\n    default:\n      return state\n  }\n}\n\nexport default pokemonListReducer;","export const actionTypes = {\n  UPDATE_SEARCH_CONTENT: 'UPDATE_SEARCH_CONTENT',\n  CHANGE_MOBILE_ITEMS_STATUS: 'CHANGE_MOBILE_ITEMS_STATUS'\n}\n\n\nexport const updateSearch = (searchContent) => {\n\n  return {\n    type: actionTypes.UPDATE_SEARCH_CONTENT,\n    payload: {\n      searchContent\n    }\n  }\n}\n\n\nexport const changeMobileItemsStatus = () => {\n  return {\n    type: actionTypes.CHANGE_MOBILE_ITEMS_STATUS\n  }\n}","import { actionTypes } from '../actions/navBarActions';\n\nconst initialState = {\n  searchContent: \"\",\n  isMobileItemsActive: false\n}\n\n\nconst navBarReducer = (state = initialState, action) => {\n  switch (action.type){\n    case actionTypes.UPDATE_SEARCH_CONTENT:\n      return {\n        ...state, \n        ...action.payload\n      }\n    \n    case actionTypes.CHANGE_MOBILE_ITEMS_STATUS:\n      return {\n        ...state,\n        isMobileItemsActive: !state.isMobileItemsActive\n      }\n    default:\n      return state\n  }\n}\n\nexport default navBarReducer;","import { combineReducers } from 'redux';\nimport pokemonData from './pokemonReducer';\nimport navBar from './navBarReducer';\n\nexport default combineReducers({\n  pokemonData,\n  navBar\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = composeWithDevTools({\n  name: 'Redux',\n  realtime: true,\n  trace: true,\n  traceLimit: 20\n})\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware( thunk)\n  )\n)\n\nexport default store","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\n\n\n\nconst StatsChart = (props) => {\n  const firstPokemon = props.pokemonData.pokemons[props.pokemonData.firstPokemon];\n  const secondPokemon = props.pokemonData.pokemons[props.pokemonData.secondPokemon];\n\n\n  const data = {\n    labels: firstPokemon.stats.map( ({ stat }) => stat.name),\n    datasets: [\n      {\n        label: firstPokemon.name,\n        data: firstPokemon.stats.map(({ base_stat }) => base_stat ),\n        backgroundColor: '#ff7a7f',\n        borderWidth: 3,\n        hidden: false \n      }\n    ]\n  }\n\n  if (props.pokemonData.isComparing){\n    data.datasets = [\n      ...data.datasets,\n      {\n        label: secondPokemon.name,\n        data: secondPokemon.stats.map(({base_stat}) => base_stat ),\n        backgroundColor: '#7a7eff',\n        borderWidth: 3,\n        hidden: !props.pokemonData.isComparing\n      }\n    ]\n  }\n\n  const options = {\n    responsive: true,\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false\n          }\n        }\n      ],\n    }\n  }\n\n\n  return (\n    <div>\n      <Bar\n        data={ data }\n        options={ options }\n        datasetKeyProvider={ ()=>(Math.random()) }\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\nexport default connect(mapStateToProps)(StatsChart);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isPokemonModalActive, isComparing } from '../../redux/actions/pokemonActions';\nimport config from '../../config';\nimport pokeball from '../../images/gray-pokeball.png';\nimport Chart from '../StatsChart';\nimport './pokemonModal.css';\nimport './pokemonTypes.css';\n\nconst PokemonModal = (props) => {\n  const pokemon = props.pokemonData.pokemons[props.pokemonData.firstPokemon]\n\n  const closeModal = () => {\n    props.isPokemonModalActive();\n  }\n\n  const handleCardClick = (event) => { \n    event.stopPropagation();\n  }\n\n  const comparePokemon = () => {\n    props.isPokemonModalActive();\n    props.isComparing();\n  }\n\n  return (\n    <div>\n      {\n        props.pokemonData.isModalActive && (\n          <div className='modal-container' onClick={ closeModal }>\n            <div className='card' onClick={ handleCardClick }>\n              <div className='pokemon-card__title'>\n                \n                <button className='pokemon-card__compare' onClick={ comparePokemon }>\n                    Compare\n                </button>\n                <button className='pokemon-card__close' onClick={ closeModal }>\n                    X\n                </button>\n              </div>\n              <div className='pokemon-container'>\n                <div className='image-container'>\n                  <img className='pokemon-img' src={ config.SPRITES_URL + pokemon.id + '.png' } alt={ pokemon.name } />\n                </div>\n                <h2 className='pokemon-name'>{ pokemon.name.toUpperCase() }</h2>     \n                <p className='pokemon-description'>\n                    { pokemon.description }\n                </p>\n                <ul className='pokemon-types'>\n                  {\n                  pokemon.types && \n                  pokemon.types.map(type =>(\n                    <li className={'pokemon-type ' + type.type.name} key={type.type.name}>\n                      {type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1)}\n                    </li>\n                  ))}\n                </ul>\n                <div className='information-container'> \n                  <div className='information-container__item'>\n                    <h3 className='information-container__item-value'>{ pokemon.height }m</h3>\n                    <h3 className='information-container__item-name'>Height</h3>\n                  </div>\n                  <div className='information-container__item bordered'>\n                    <h3 className='information-container__item-value'>{ pokemon.weight }kg</h3>\n                    <h3 className='information-container__item-name'>Weight</h3>\n                  </div>\n                  <div className='information-container__item'>\n                    <h3 className='information-container__item-value'>{ pokemon.gender }</h3>\n                    <h3 className='information-container__item-name'>Gender</h3>\n                  </div>\n                </div>\n              </div>\n              \n              <div className='pokemon-container'>\n                <div className='pokemon-container__title'>\n                  <img\n                    className='pokemon-container__title-img'\n                    src={ pokeball }\n                    alt='Pokeball'\n                  />\n                  <h3 className='pokemon-container__title-text'>Abilities</h3>\n                </div>\n                <ul className='abilities-list'>\n                  { pokemon.abilities &&\n                  pokemon.abilities.map(ability => (\n                    <li className='abilities-item'key={ ability.ability.name }>\n                      { ability.ability.name.charAt(0).toUpperCase() + ability.ability.name.slice(1) }\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className='pokemon-container'>\n                <div className='pokemon-container__title'>\n                  <img\n                    className='pokemon-container__title-img'\n                    src={ pokeball }\n                    alt='Pokeball'\n                  />\n                  <h3 className='pokemon-container__title-text'>Stats</h3>\n                </div>\n                <Chart className='chart' />\n              </div>\n              <h2 className='pokemon-text'>{ pokemon.name.toUpperCase() }</h2>     \n            </div> \n          </div>  \n        )\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    isPokemonModalActive: (state) => dispatch(isPokemonModalActive(state)),\n    isComparing: (state) => dispatch(isComparing(state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonModal);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isComparisonModalActive, isComparing } from '../../redux/actions/pokemonActions';\nimport config from '../../config';\nimport pokeball from '../../images/gray-pokeball.png';\nimport Chart from '../StatsChart';\nimport './comparisonModal.css';\n\nconst ComparisonModal = (props) => {\n  const pokemon = props.pokemonData.pokemons[props.pokemonData.firstPokemon]\n  const pokemon2 = props.pokemonData.pokemons[props.pokemonData.secondPokemon]\n\n  const closeModal = () => {\n    props.isComparing();\n    props.isComparisonModalActive();\n  }\n\n  const handleCardClick = (event) => { \n    event.stopPropagation();\n  }\n\n  return (\n    <div>\n      {\n        props.pokemonData.isComparisonModalActive && (\n          <div className='modal-container' onClick={ closeModal }>\n            <div className='card' onClick={ handleCardClick }>\n              <div className='pokemon-card__title'>\n                <button className='pokemon-card__compare' hidden={true}>\n                    Compare\n                </button>\n                <button className='pokemon-card__close' onClick={ closeModal }>\n                    X\n                </button>\n              </div>\n\n\n              <div className='pokemon-container'>\n                <div className='comparison-image-container'>\n                  <img className='comparison-pokemon-img' src={ config.SPRITES_URL + pokemon.id + '.png' } alt={ pokemon.name } />\n                  <img className='comparison-pokemon-img' src={ config.SPRITES_URL + pokemon2.id + '.png' } alt={ pokemon2.name } />\n                </div>\n                <div>\n                  <h2 className='pokemon-name'>{ pokemon.name.toUpperCase() } vs { pokemon2.name.toUpperCase() }</h2>    \n                </div>\n                 \n                <div className='information-container'> \n                  <div className='information-container__item'>\n                    <h3 className='information-container__item-value'>{ pokemon.height }m</h3>\n                    <h3 className='information-container__item-name'>Height</h3>\n                    <h3 className='information-container__item-value'>{ pokemon2.height }m</h3>\n                  </div>\n                  <div className='information-container__item bordered'>\n                    <h3 className='information-container__item-value'>{ pokemon.weight }kg</h3>\n                    <h3 className='information-container__item-name'>Weight</h3>\n                    <h3 className='information-container__item-value'>{ pokemon2.weight }kg</h3>\n                  </div>\n                  <div className='information-container__item'>\n                    <h3 className='information-container__item-value'>{ pokemon.gender }</h3>\n                    <h3 className='information-container__item-name'>Gender</h3>\n                    <h3 className='information-container__item-value'>{ pokemon2.gender }</h3>\n                  </div>\n                </div>\n              </div>\n              \n              <div className='pokemon-container'>\n                <div className='pokemon-container__title'>\n                  <img\n                    className='pokemon-container__title-img'\n                    src={ pokeball }\n                    alt='Pokeball'\n                  />\n                  <h3 className='pokemon-container__title-text'>Abilities</h3>\n                </div>\n                <div className='abilities-container'>\n                  <ul className='abilities-list'>\n                    { pokemon.abilities &&\n                    pokemon.abilities.map(ability => (\n                      <li className='abilities-item'key={ ability.ability.name }>\n                        { ability.ability.name.charAt(0).toUpperCase() + ability.ability.name.slice(1)}\n                      </li>\n                    ))}\n                  </ul>\n                  <ul className='abilities-list'>\n                    { pokemon2.abilities &&\n                    pokemon2.abilities.map(ability => (\n                      <li className='abilities-item right'key={ ability.ability.name }>\n                        { ability.ability.name.charAt(0).toUpperCase() + ability.ability.name.slice(1)}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n\n              <div className='pokemon-container'>\n                <div className='pokemon-container__title'>\n                  <img\n                    className='pokemon-container__title-img'\n                    src={ pokeball }\n                    alt='Pokeball'\n                  />\n                  <h3 className='pokemon-container__title-text'>Stats</h3>\n                </div>\n                <Chart className='chart' />\n              </div>\n              <h2 className='pokemon-text'>{ pokemon.name.toUpperCase() }</h2>     \n            </div> \n          </div>  \n        )\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    isComparisonModalActive: (state) => dispatch(isComparisonModalActive(state)),\n    isComparing: (state) => dispatch(isComparing(state))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComparisonModal);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport icon from '../../images/pokedex.png';\nimport { connect } from 'react-redux';\nimport { updateSearch, changeMobileItemsStatus } from '../../redux/actions/navBarActions';\nimport './navigationBar.css';\n\nconst NavigationBar = (props) => {\n\n  const handleSearch = (event) => {\n    props.updateSearch(event.target.value.toLowerCase());\n  }\n\n  const changeMobileItemsStatus = () => {\n    props.changeMobileItemsStatus()\n  }\n\n  return (\n    <div className='main-nav-container'>\n      <nav className='nav-bar'>\n        <div className='nav-bar-container'>\n          <NavLink to='/' className='home-link'>\n              <img \n                src={ icon }\n                alt='PokéDex'\n                className='home-link-img'\n              />\n          </NavLink>\n          <NavLink to='/pokemons' className='normal-link'>Pokémons</NavLink>\n        </div>\n        \n        <button className='burger-button' onClick={ changeMobileItemsStatus }>\n          <span className='burger-button-bar'/>\n          <span className='burger-button-bar'/>\n          <span className='burger-button-bar'/>\n        </button>\n\n        { props.isSearchActive && \n          (\n            <input className='search-input' type='text' placeholder='Search' onChange={ handleSearch } />\n          )\n        }\n      </nav>\n      {\n        props.navBar.isMobileItemsActive && (\n          <div className='mobile-bar-container'>\n            <NavLink className='mobile-link' to='/' >Home</NavLink>\n            <NavLink className='mobile-link' to='/pokemons' >Pokémons</NavLink>\n          </div>\n        )\n      }\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    updateSearch: (text) => dispatch(updateSearch(text)),\n    changeMobileItemsStatus: () => dispatch(changeMobileItemsStatus())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport config from '../../config';\nimport { selectPokemon, fetchPokemonList, fetchPokemon, fetchPokemonSpecies } from '../../redux/actions/pokemonActions';\nimport PokemonModal from '../PokemonModal';\nimport ComparisonModal from '../ComparisonModal';\nimport NavigationBar from '../NavigationBar';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport './pokemonList.css'\n\nlet didLoadPokemons = false;\nconst PokemonList = (props) => {\n  \n\n  const fetchPokemonList = () =>{\n    props.fetchPokemonList(props.pokemonData.next);\n  }\n\n  if ( !didLoadPokemons ){\n    fetchPokemonList();\n    didLoadPokemons = true;\n  }\n \n  const fetchPokemon = (index) => {\n    if ( !props.pokemonData.isComparing ){\n      props.selectPokemon(index);\n      props.fetchPokemon(index);\n      props.fetchPokemonSpecies(index);\n    }else{\n      props.selectPokemon(index);\n      props.fetchPokemon(index);\n      props.fetchPokemonSpecies(index);\n    }\n  }\n\n  return (\n    <div>\n      <PokemonModal/>\n      <ComparisonModal />\n      <NavigationBar isSearchActive={ true } />\n      <InfiniteScroll\n        dataLength={ props.pokemonData.pokemons.length }\n        next={ fetchPokemonList }\n        hasMore={ true }\n      >\n      <ul className=\"pokemon__items\">\n        {\n          props.pokemonData.pokemons.filter(item => item.name.includes(props.navBar.searchContent)).map((pokemon) => {\n            const index = props.pokemonData.pokemons.indexOf(pokemon);\n            return (\n              <li className=\"pokemon__item\" key={ index } onClick={ () => fetchPokemon(index) }>\n                <img \n                  className=\"pokemon__item-img\"\n                  src={ config.SPRITES_URL + (index + 1 ) + '.png' } alt={ pokemon.name } />\n                <h3 className=\"pokemon__item-name\">\n                  { pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1) }\n                </h3>\n              </li>\n            )\n          })\n        }\n      </ul>\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    selectPokemon: (index) => dispatch(selectPokemon(index)),\n    fetchPokemonList: (url) => dispatch(fetchPokemonList(url)),\n    fetchPokemon: (index, key) => dispatch(fetchPokemon(index, key)),\n    fetchPokemonSpecies: (index, key) => dispatch(fetchPokemonSpecies(index, key))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);","import React from 'react';\nimport NavigationBar from '../NavigationBar';\nimport { NavLink } from 'react-router-dom';\nimport pokeball from '../../images/open-pokeball.png';\nimport './welcomePage.css';\n\nconst WelcomePage = () => {\n\n  return (\n    <div className='welcome-container'>\n      <NavigationBar isSearchActive={ false } />\n      <div className='welcome-card'>\n        <div className='welcome-message-container'>\n            <h1 className='welcome-message'>Welcome to the PokéDex!</h1>\n            <NavLink to='/pokemons' className='welcome-button'>Let's Start</NavLink>\n        </div>\n        <img \n          className='welcome-img'\n          src={ pokeball }\n          alt='Pokeball'\n        />\n      </div>\n    </div>\n  )\n}\n\n\nexport default WelcomePage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport pokeballIcon from '../../images/pokeball.png';\nimport sadPokemon from '../../images/sad-pokemon.png';\nimport './pageNotFound.css';\nconst PageNotFound = () => {\n\n  return (\n    <div className='main-container'>\n      <div className='container'>\n        <h1 className='sorry-title'>Oops!</h1>\n        <div className='message-container'>\n          <h2 className='not-found-number'>4</h2>\n          <img \n            className='not-found-img'\n            src={ pokeballIcon } \n            alt='Pokeball'\n          />\n          <h2 className='not-found-number'>4</h2>\n        </div>\n        <h2 className='page-not-found'>Page Not Found</h2>\n        <NavLink to='/pokemons' className='back-button'>Back Home</NavLink>\n      </div>\n      <img\n        className='sad-pokemon-img'\n        src={ sadPokemon }\n        alt='Sad Pokémon'\n      />\n    </div> \n  )\n}\n\n\nexport default PageNotFound;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {HashRouter, Route, Switch } from 'react-router-dom';\nimport store from './redux/store';\nimport PokemonList from './components/PokemonList';\nimport WelcomePage from './components/WelcomePage';\nimport PageNotFound from './components/PageNotFound';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <HashRouter basename='/'>\n      <Switch>\n        <Route path='/' exact component={ WelcomePage } />\n        <Route path='/pokemons' component={ PokemonList }/>\n        <Route path='*' exact component={ PageNotFound } />\n      </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/pokedex.6f1fd446.png\";","module.exports = __webpack_public_path__ + \"static/media/open-pokeball.fc3cf90e.png\";","module.exports = __webpack_public_path__ + \"static/media/pokeball.3f526a4f.png\";","module.exports = __webpack_public_path__ + \"static/media/sad-pokemon.eca9275c.png\";"],"sourceRoot":""}